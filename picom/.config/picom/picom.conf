#################################
# GLX Backend
#################################
# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";
# glx-no-stencil = false;

# GLX backend: Copy unmodified regions from front buffer instead of redrawing them all.
# My tests with nvidia-drivers show a 10% decrease in performance when the whole screen is modified,
# but a 20% increase when only 1/4 is.
# My tests on nouveau show terrible slowdown.
# glx-copy-from-front = false;

# GLX backend: Avoid rebinding pixmap on window damage.
# Probably could improve performance on rapid window content changes, but is known to break things on some drivers (LLVMpipe).
# Recommended if it works.
# glx-no-rebind-pixmap = false;

################################
# Background-Blurring
#################################
blur-method = "dual_kawase";
# # blur-size = 12
# # blur-deviation = false
blur-strength = 7
blur-kern = "3x3box";
blur-background-exclude = [
  "window_type = 'dock'", # awesomewm wibox
  "window_type = 'dropdown_menu'",
  "window_type = 'menu'",
  "window_type = 'popup_menu'",
  "window_type = 'tooltip'",
];

#################################
# Corners
#################################

corner-radius = 14 
round-borders = 1

rounded-corners-exclude = [
  "window_type = 'dock'",
  "window_type = 'desktop'",
];

#################################
# Fading
#################################
fading = true;
fade-in-step = 0.03;
fade-out-step = 0.03;
fade-delta = 5
fade-exclude = [
  "fullscreen"
];

#################################
# General
#################################
vsync = true;
detect-rounded-corners = true;
detect-client-opacity = true;
detect-transient = true;
use-damage = true;
log-level = "info";
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; clip-shadow-above = true; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};

#################################
# Transparency / Opacity
#################################

active-opacity = 0.90;

inactive-opacity = 0.90;

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = [];

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
# like `50:name *= "Firefox"`. picom-trans is recommended over this. 
# Note we don't make any guarantee about possible conflicts with other 
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
opacity-rule = [
  "85:class_g = 'Rofi'",
  "100:class_g    = 'firefox'",
  "100:class_g    = 'discord'",
  "100:class_g    = 'mpv'",
];

